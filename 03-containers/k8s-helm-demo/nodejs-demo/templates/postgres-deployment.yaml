{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodejs-demo.fullname" . }}-postgresql
  labels:
    app: postgresql
    {{- include "nodejs-demo.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: {{ .Values.database.name }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "nodejs-demo.fullname" . }}-secrets
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "nodejs-demo.fullname" . }}-secrets
              key: DB_PASSWORD
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 12 }}
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        emptyDir: {}
{{- end }}
